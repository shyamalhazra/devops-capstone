pipeline {
    agent any
environment {
        server = getArtifactoryServer("jfrog")
        buildInfo=newBuildInfo()
    }
 
stages {
 stage('Git ChechOut') {
 steps{
  git branch: 'main', url: 'https://github.com/shyamalhazra/devops-capstone.git' 
 }
 }

 stage('Maven Clean') {
 steps{
  sh 'mvn clean'
 }
}
 stage('Maven Compile') {
 steps{
  sh 'mvn compile'
 }
 }
 stage('Maven Test') {
 steps{
    sh 'mvn test'
 }
}
 stage('Maven Package') {
 steps{
  sh 'mvn package'
 }
}
 stage('Archive Artifact') {
 steps{
  archiveArtifacts artifacts: 'target/petclinic.war', followSymlinks: false
 }
 }

stage('SonarCloud Scan') {
steps{
sh 'sudo update-java-alternatives -s java-1.11.0-openjdk-amd64'
   withSonarQubeEnv('SonarCloud'){
     sh 'mvn sonar:sonar'
   }
 sh 'sudo update-java-alternatives -s java-1.8.0-openjdk-amd64'
 }
}

 stage('Build Management') {
 steps{
     script{
	
	def server = Artifactory.server 'jfrog'
                 def uploadSpec = """{
                    "files": [{
                       "pattern": "**/*.war",
                       "target": "java-repo"
                    }]
                 }"""

                 server.upload(uploadSpec)
}
}
post{
            failure{
                mail bcc: '', body: '''Hi aaa,
                Recent build has failed. Have a look.
                Thanks,''', cc: '', from: 'shyamanalytic@gmail.com', replyTo: '', subject: 'Build Failure', to: 'shyamcloud02@gmail.com'
            }
        }
}
stage('Publish Build Info'){
steps{
    rtPublishBuildInfo(
        serverId: 'jfrog',
        
        )
}
}
stage('Build&Publish Image') {
steps{
  sh 'docker build -t petclinic:latest .'
  sh 'docker tag petclinic:latest shyamh/petclinic:latest'
  sh 'docker push shyamh/petclinic:latest'
 }
 post{
            failure{
                mail bcc: '', body: '''Hi aaa,
                Recent build has failed. Have a look.
                Thanks,''', cc: '', from: 'shyamanalytic@gmail.com', replyTo: '', subject: 'Build Failure', to: 'shyamcloud02@gmail.com'
            }
        }
 }
stage('Terraform Deployment'){
steps{
     sh "cd terraform-code; terraform init ; terraform apply --auto-approve"
 }
 post{
            failure{
                mail bcc: '', body: '''Hi aaa,
                Recent build has failed. Have a look.
                Thanks,''', cc: '', from: 'shyamanalytic@gmail.com', replyTo: '', subject: 'Build Failure', to: 'shyamcloud02@gmail.com'
            }
        }
 }

}
}